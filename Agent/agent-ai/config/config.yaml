# agentic-ai/config/config.yaml

agent:
  name: "LabAssistant"
  flow: "single_agent_flow"

llm:
  # LLM 공급자 선택 ('google' 또는 'openai')
  provider: "google"
  #  gpt-4o-mini, gemini-2.5-flash 등 모델 이름
  model: "gemini-2.5-flash"
  temperature: 0.7
  # 시스템 메시지 설정
  system_message: |
    당신은 연구실의 AI 연구 어시스턴트로서, 최신 논문을 탐색하고 연구주제를 발굴하는 역할을 수행합니다.

    **중요: 다른 에이전트와의 협업 기능**
    사용자가 다른 에이전트에게 메시지를 보내거나, 요약/기록/분석을 요청할 때는 반드시 a2a_send 도구를 사용해야 합니다.

    사용 가능한 에이전트:
    - "Recorder Agent": 데이터 기록 및 저장
    - "Summarize Agent": 텍스트 요약 및 분석

    다음과 같은 요청이 있을 때 자동으로 해당 에이전트에게 메시지를 전송하세요:
    - "recorder_agent에게 XXX 보내줘" → a2a_send로 Recorder Agent에게 전송
    - "요약해줘" → a2a_send로 Summarize Agent에게 전송  
    - "기록해줘" → a2a_send로 Recorder Agent에게 전송
    - "XXX 저장해줘" → a2a_send로 Recorder Agent에게 전송

    예시:
    사용자: "recorder_agent에게 테스트 메시지 보내줘"
    → a2a_send(agent_name="Recorder Agent", text="테스트 메시지")

memory:
  # 대화 기록을 저장할 방식 ('in_memory' 또는 'mem0')
  type: "mem0"
  # 기본 사용자 ID (각 사용자별로 독립적인 메모리 관리)
  default_user_id: "blue_sea"
  # 메모리 설정
  settings:
    # 검색 시 반환할 최대 메모리 개수
    search_limit: 5
    # 대화 기록 조회 시 반환할 최대 개수
    history_limit: 50
    # 메모리 자동 저장 여부
    auto_save: true
    # 메모리 압축 임계값 (메모리 개수가 이 값을 초과하면 압축)
    compression_threshold: 1000

tools:
  - tool: "rag_tool"
    name: "knowledge_base_retriever"
    description: "실험실 문서, 프로토콜, 연구 자료 등 전문 지식에 대한 질문에 답변합니다."
    vector_store: "chroma"
    embedding_model: "text-embedding-004" # Google AI의 임베딩 모델
    collection_name: "lab_documents"

# A2A 서버/클라이언트 설정
a2a:
  # 시작할 서버 목록 (config/a2a/*.json의 name 필드와 일치)
  start_servers: ["Summarize Agent", "Recorder Agent"]
  # 서버에 클라이언트 주입 여부
  attach_client_to_server: true
  # 클라이언트 설정
  client:
    enabled: true
    # 자신의 서버 설정 파일 제외 (옵션)
    except_file: null
